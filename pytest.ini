[tool:pytest]
# Pytest configuration for occupancy prediction system

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, requires services)
    database: Tests requiring database access
    ha_client: Tests requiring Home Assistant client
    slow: Slow-running tests
    smoke: Minimal tests for basic functionality
    regression: Tests for specific bug fixes
    system: System-level integration tests
    timeout: Tests with specific timeout requirements
    resource_intensive: Tests that use significant system resources
    failure_recovery: Tests for failure recovery scenarios
    lifecycle: Tests for component lifecycle management
    error_propagation: Tests for error handling across components

# Output options - updated for GitHub Actions compatibility
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --color=yes
    --durations=10
    --showlocals

# Asyncio configuration
asyncio_mode = auto

# Minimum version
minversion = 7.0

# Test timeouts (in seconds)
timeout = 300
timeout_method = thread

# Coverage options (if pytest-cov is installed)
# addopts = --cov=src --cov-report=html --cov-report=term-missing --cov-fail-under=80

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*aiohttp.*ssl.*:UserWarning